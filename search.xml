<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>单链表总结（参考自尚硅谷）</title>
      <link href="2020/10/06/dan-lian-biao-zong-jie-can-kao-zi-shang-huo-gu/"/>
      <url>2020/10/06/dan-lian-biao-zong-jie-can-kao-zi-shang-huo-gu/</url>
      
        <content type="html"><![CDATA[<p><strong><em>参考自尚硅谷</em></strong><br><em>单链表可以有头节点也可以没有。</em><br><strong>以下代码涵盖单链表的总结。</strong></p><h2 id="英雄排行功能"><a href="#英雄排行功能" class="headerlink" title="英雄排行功能"></a>英雄排行功能</h2><pre><code>public class SingleLinkedListDemo {    public static void main(String[] args) {        // TODO Auto-generated method stub    }}//英雄类class HeroNode{    public int id;    public String name;    public String nickName;    public HeroNode next;    public HeroNode(int id, String name,String nickName) {        this.id = id;        this.name = name;        this.nickName = nickName;    }    @Override    public String toString() {        return "HeroNode [id=" + id + ", name=" + name + ", nickName=" + nickName + "]";    }}//链表类class SingleLinkedList{    HeroNode head = new HeroNode(0,"","");    public HeroNode getHead() {        return head;    }    //显示链表方法    public void list() {        if(head.next == null) {            System.out.println("链表空，无法显示。");            return;        }        while(true) {            HeroNode temp = head;            if(temp.next == null)                 break;            System.out.println(temp);            temp = temp.next;        }    }    //无顺序添加链表    public void add(HeroNode heroNode) {        HeroNode temp = head;        while(true) {            if(temp.next == null)                break;            temp = temp.next;        }        temp.next = heroNode;    }    //按id大小顺序，从小到大，插入或添加链表    public void addByOrder(HeroNode heroNode) {        HeroNode temp = head;        boolean flag = false;        while(true) {            if(temp.next == null)                break;            if(temp.next.id &gt; heroNode.id)                break;            if(temp.next.id == heroNode.id) {                flag = true;                break;            }                temp = temp.next;        }        if(flag == true)            System.out.println("添加失败，已保存目标id。");        else {            heroNode.next = temp.next;            temp.next = heroNode;        }    }}</code></pre><p><strong>以上内容若有错误或更优解，欢迎指正。</strong></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构与算法 </tag>
            
            <tag> 技术 </tag>
            
            <tag> 尚硅谷 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Creeper图集1</title>
      <link href="2020/10/02/creeper-tu-ji-1/"/>
      <url>2020/10/02/creeper-tu-ji-1/</url>
      
        <content type="html"><![CDATA[<h2 id="Creeper的介绍"><a href="#Creeper的介绍" class="headerlink" title="Creeper的介绍"></a>Creeper的介绍</h2><p>出生日期：2015年4月20日。<br>猫称打架小能手<br>爱好：睡觉！睡觉！！睡觉！！！</p><h2 id="Creeper图集1"><a href="#Creeper图集1" class="headerlink" title="Creeper图集1"></a>Creeper图集1</h2><p><strong>Creeper的照片，第一部合集。</strong><br>照片如下：</p><h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><p><img src="https://creeper-1303839585.cos.ap-beijing.myqcloud.com/blog/Creeper%20atlas1/2.jpg"></p><h3 id="2"><a href="#2" class="headerlink" title="2"></a>2</h3><p><img src="https://creeper-1303839585.cos.ap-beijing.myqcloud.com/blog/Creeper%20atlas1/3.jpg"></p><h3 id="3"><a href="#3" class="headerlink" title="3"></a>3</h3><p><img src="https://creeper-1303839585.cos.ap-beijing.myqcloud.com/blog/Creeper%20atlas1/4.jpg"></p><h3 id="4"><a href="#4" class="headerlink" title="4"></a>4</h3><p><img src="https://creeper-1303839585.cos.ap-beijing.myqcloud.com/blog/Creeper%20atlas1/5.jpg"></p><h3 id="5"><a href="#5" class="headerlink" title="5"></a>5</h3><p><img src="https://creeper-1303839585.cos.ap-beijing.myqcloud.com/blog/Creeper%20atlas1/6.jpg"></p><h3 id="6"><a href="#6" class="headerlink" title="6"></a>6</h3><p><img src="https://creeper-1303839585.cos.ap-beijing.myqcloud.com/blog/Creeper%20atlas1/7.jpg"></p><h3 id="7"><a href="#7" class="headerlink" title="7"></a>7</h3><p><img src="https://creeper-1303839585.cos.ap-beijing.myqcloud.com/blog/Creeper%20atlas1/8.jpg"></p><h3 id="8"><a href="#8" class="headerlink" title="8"></a>8</h3><p><img src="https://creeper-1303839585.cos.ap-beijing.myqcloud.com/blog/Creeper%20atlas1/9.jpg"></p><h3 id="9"><a href="#9" class="headerlink" title="9"></a>9</h3><p><img src="https://creeper-1303839585.cos.ap-beijing.myqcloud.com/blog/Creeper%20atlas1/10.jpg"></p><h3 id="10"><a href="#10" class="headerlink" title="10"></a>10</h3><p><img src="https://creeper-1303839585.cos.ap-beijing.myqcloud.com/blog/Creeper%20atlas1/11.jpg"></p><h3 id="11"><a href="#11" class="headerlink" title="11"></a>11</h3><p><img src="https://creeper-1303839585.cos.ap-beijing.myqcloud.com/blog/Creeper%20atlas1/12.jpg"></p><h3 id="12"><a href="#12" class="headerlink" title="12"></a>12</h3><p><img src="https://creeper-1303839585.cos.ap-beijing.myqcloud.com/blog/Creeper%20atlas1/1.jpg"></p><p><strong>敬请期待下一部，Creeper合集2。</strong></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 宠物 </tag>
            
            <tag> 可爱 </tag>
            
            <tag> 霸气 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/09/29/hello-world/"/>
      <url>2020/09/29/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
